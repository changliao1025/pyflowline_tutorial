{
    "sFilename_model_configuration": "/qfs/people/liao313/workspace/python/pyhexwatershed/tests/configurations/pyhexwatershed_yukon_mpas.json",
    "sModel": "pyhexwatershed",
    "sRegion": "yukon",
    "sWorkspace_input": "/qfs/people/liao313/workspace/python/pyhexwatershed_icom/data/yukon/input",
    "sWorkspace_output": "/compyfs/liao313/04model/pyhexwatershed/yukon",
    "sJob": "hexwatershed",
    "iFlag_create_mesh": 1,
    "iFlag_mesh_boundary": 1,
    "iFlag_save_mesh": 1,
    "iFlag_simplification": 1,
    "iFlag_intersect": 1,
    "iFlag_resample_method": 2,
    "iFlag_flowline": 1,
    "iFlag_global": 0,
    "iFlag_multiple_outlet": 0,
    "iFlag_use_mesh_dem": 1,
    "iFlag_elevation_profile": 1,
    "iFlag_rotation": 0,
    "iFlag_stream_burning_topology": 1,
    "iFlag_save_elevation": 1,
    "iFlag_dggrid": 1,
    "iResolution_index": 1,
    "iCase_index": 1,
    "iMesh_type": 4,
    "nOutlet": 1,
    "dMissing_value_dem": -9999,
    "dBreach_threshold": 10,
    "dAccumulation_threshold": 100000,
    "dLongitude_left": -80,
    "dLongitude_right": -50.6,
    "dLatitude_bot": -20.4,
    "dLatitude_top": 5.5,
    "dResolution_degree": 5000,
    "dResolution_meter": 50000,
    "sDate": "20220725",
    "sMesh_type": "mpas",
    "sDggrid_type": "ISEA3H",
    "iFlag_user_provided_binary": 1,
    "sFilename_dggrid": "/qfs/people/liao313/bin/dggrid",
    "sFilename_hexwatershed_bin": "/qfs/people/liao313/workspace/cplus/hexwatershed/build/hexwatershed",
    "sFilename_spatial_reference": "/qfs/people/liao313/workspace/python/pyhexwatershed_icom/data/yukon/input/boundary_proj_buff.shp",
    "sFilename_mesh_boundary": "/qfs/people/liao313/data/hexwatershed/yukon/vector/hydrology/boundary.geojson",
    "sFilename_dem": "/qfs/people/liao313/data/hexwatershed/yukon/raster/dem/hyd_ar_dem_30s/hyd_ar_dem_30s.tif",
    "sFilename_mesh_netcdf": "/compyfs/liao313/00raw/mesh/global/lnd_mesh.nc",
    "sFilename_basins": "/qfs/people/liao313/workspace/python/liao_2023_scidata_dggs/data/yukon/input/pyflowline_yukon_basins.json"
}